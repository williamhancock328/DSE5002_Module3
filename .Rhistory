z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
res = c()
for (i in seq_along(nums_vector)) {
for (j in seq_along(nums_vector)) {
if (i+j==target) {
c(res, c(which(nums_vector==i),which(nums_vector==j)))
}
}
}
return(res)
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
res = c(1)
for (i in seq_along(nums_vector)) {
for (j in seq_along(nums_vector)) {
if (i+j==target) {
c(res, c(which(nums_vector==i),which(nums_vector==j)))
}
}
}
return(res)
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
res = list()
for (i in seq_along(nums_vector)) {
for (j in seq_along(nums_vector)) {
if (i+j==target) {
print(c(which(nums_vector==i),which(nums_vector==j)))
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq_along(nums_vector)) {
if (i+j==target) {
print(c(which(nums_vector==i),which(nums_vector==j)))
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
result_vector <- list()
for (i in seq_along(nums_vector)) {
for (j in seq_along(nums_vector)) {
if (i + j == target) {
result_vector <- append(result_vector, list(c(which(nums_vector == i), which(nums_vector == j))))
}
}
}
# Print the final result vector
print(result_vector)
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq_along(nums_vector)) {
if (i+j==target) {
print(c(which(nums_vector==i),which(nums_vector==j)))
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq_along(nums_vector)) {
if (nums_vector[i]+nums_vector[j]==target) {
print(c(which(nums_vector==i),which(nums_vector==j)))
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq_along(nums_vector)) {
if (nums_vector[i]+nums_vector[j]==target) {
print(c(which(nums_vector==i),which(nums_vector==j)))
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq_along(nums_vector)) {
if (nums_vector[i]+nums_vector[j]==target) {
print(c(i, j))
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq(i + 1, length(nums_vector))) {
if (nums_vector[i]+nums_vector[j]==target) {
print(c(i, j))
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq(i + 1, length(nums_vector))) {
if (nums_vector[i]+nums_vector[j]==target) {
print(c(i, j))
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq(i + 1, length(nums_vector))) {  # Start from i + 1 to avoid using the same element twice
if (nums_vector[i] + nums_vector[j] == target) {
print(c(i, j))  # Output the indices of the two numbers
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq(i + 1, length(nums_vector))) {  # Start from i + 1 to avoid using the same element twice
if (nums_vector[i] + nums_vector[j] == target) {
print(c(i, j))  # Output the indices of the two numbers
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq(i, length(nums_vector))) {  # Start from i + 1 to avoid using the same element twice
if (nums_vector[i] + nums_vector[j] == target) {
print(c(i, j))  # Output the indices of the two numbers
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq(i, length(nums_vector))) {  # Start from i + 1 to avoid using the same element twice
if (nums_vector[i] + nums_vector[j] == target) {
print(c(i, j))  # Output the indices of the two numbers
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j seq_along(nums_vector)) {  # Start from i + 1 to avoid using the same element twice
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j seq_along(nums_vector)) {  # Start from i + 1 to avoid using the same element twice
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq_along(nums_vector)) {  # Start from i + 1 to avoid using the same element twice
if (nums_vector[i] + nums_vector[j] == target) {
print(c(i, j))  # Output the indices of the two numbers
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
two_sum <- function(nums_vector,target){
#your code here
for (i in seq_along(nums_vector)) {
for (j in seq_along(nums_vector)) {
if (i+j==target) {
print(c(which(nums_vector==i),which(nums_vector==j)))
}
}
}
}
# Test code
nums_vector <- c(5,7,12,34,6,10,8,9)
target <- 13
z=two_sum(nums_vector,target)
print(z)
#expected answers
#[1] 1 7
#[1] 2 5
#[1] 5 2
a="Please call me at 456-123-2329, asap"
b="Hey, we have a code 234 on machine a-234-12, call me at 678-321-98766"
c="On 12-23-2022, Joe over at 122 Turnpike, dialled 912-835-4756, tell me by 9:02 pm Wed"
extract_phone <- function(num){
searchres = str_extract(num, "\\d{3}-\\d{3}-\\d{4}$")
return(searchres)
}
extract_phone(a)
extract_phone(b)
extract_phone(c)
a="Please call me at 456-123-2329, asap"
b="Hey, we have a code 234 on machine a-234-12, call me at 678-321-98766"
c="On 12-23-2022, Joe over at 122 Turnpike, dialled 912-835-4756, tell me by 9:02 pm Wed"
extract_phone <- function(num){
searchres = str_extract(num, "\\d{3}-\\d{3}-\\d{4}$")
return(searchres)
}
extract_phone(a)
extract_phone(b)
extract_phone(c)
a="Please call me at 456-123-2329, asap"
b="Hey, we have a code 234 on machine a-234-12, call me at 678-321-98766"
c="On 12-23-2022, Joe over at 122 Turnpike, dialled 912-835-4756, tell me by 9:02 pm Wed"
extract_phone <- function(num){
searchres = str_extract(num, "\\d{3}-\\d{3}-\\d{4}")
return(searchres)
}
extract_phone(a)
extract_phone(b)
extract_phone(c)
a="Please call me at 456-123-2329, asap"
b="Hey, we have a code 234 on machine a-234-12, call me at 678-321-98766"
c="On 12-23-2022, Joe over at 122 Turnpike, dialled 912-835-4756, tell me by 9:02 pm Wed"
extract_phone <- function(num){
searchres = str_extract(num, "\\d{3}-\\d{3}-\\d{4}$?")
return(searchres)
}
extract_phone(a)
extract_phone(b)
extract_phone(c)
a="Please call me at 456-123-2329, asap"
b="Hey, we have a code 234 on machine a-234-12, call me at 678-321-98766"
c="On 12-23-2022, Joe over at 122 Turnpike, dialled 912-835-4756, tell me by 9:02 pm Wed"
extract_phone <- function(num){
searchres = str_extract(num, "\\d{3}-\\d{3}-\\d{4}$?")
return(searchres)
}
extract_phone(a)
extract_phone(b)
extract_phone(c)
a="Please call me at 456-123-2329, asap"
b="Hey, we have a code 234 on machine a-234-12, call me at 678-321-98766"
c="On 12-23-2022, Joe over at 122 Turnpike, dialled 912-835-4756, tell me by 9:02 pm Wed"
extract_phone <- function(num){
searchres = str_extract(num, "\\d{3}-\\d{3}-\\d{4}$?")
return(searchres)
}
extract_phone(a)
extract_phone(b)
extract_phone(c)
a="Please call me at 456-123-2329, asap"
b="Hey, we have a code 234 on machine a-234-12, call me at 678-321-98766"
c="On 12-23-2022, Joe over at 122 Turnpike, dialled 912-835-4756, tell me by 9:02 pm Wed"
extract_phone <- function(num){
searchres = str_extract(num, "\\d{3}-\\d{3}-\\d{4}$?")
return(searchres)
}
extract_phone(a)
extract_phone(b)
extract_phone(c)
a="Please call me at 456-123-2329, asap"
b="Hey, we have a code 234 on machine a-234-12, call me at 678-321-98766"
c="On 12-23-2022, Joe over at 122 Turnpike, dialled 912-835-4756, tell me by 9:02 pm Wed"
extract_phone <- function(num){
searchres = str_extract(num, "\\d{3}-\\d{3}-\\d{4}$?")
return(searchres)
}
extract_phone(a)
extract_phone(b)
extract_phone(c)
a="Please call me at 456-123-2329, asap"
b="Hey, we have a code 234 on machine a-234-12, call me at 678-321-98766"
c="On 12-23-2022, Joe over at 122 Turnpike, dialled 912-835-4756, tell me by 9:02 pm Wed"
extract_phone <- function(num){
searchres = str_extract(num, "\\d{3}-\\d{3}-\\d{4}$?")
return(searchres)
}
extract_phone(a)
extract_phone(b)
extract_phone(c)
a="Please call me at 456-123-2329, asap"
b="Hey, we have a code 234 on machine a-234-12, call me at 678-321-98766"
c="On 12-23-2022, Joe over at 122 Turnpike, dialled 912-835-4756, tell me by 9:02 pm Wed"
extract_phone <- function(num){
searchres = str_extract(num, "\\d{3}-\\d{3}-\\d{4}")
return(searchres)
}
extract_phone(a)
extract_phone(b)
extract_phone(c)
a="Please call me at 456-123-2329, asap"
b="Hey, we have a code 234 on machine a-234-12, call me at 678-321-98766"
c="On 12-23-2022, Joe over at 122 Turnpike, dialled 912-835-4756, tell me by 9:02 pm Wed"
extract_phone <- function(num){
searchres = str_extract(num, "\\d{3}-\\d{3}-\\d{4}")
return(searchres)
}
extract_phone(a)
extract_phone(b)
extract_phone(c)
d="jimmy.halibut@gmail.com"
e="His address is:  c.brown@hopeles.org, do write him"
f="h.potter@hogwarts.edu is bouncing back on me, I wonder why?"
extract_mail <- function(num){
addr = str_extract(num, "[\\w\\W]+@\\w+.\\w+")
domain = str_split_fixed(addr,"@",2)
return(domain[2])
}
extract_mail(d)
extract_mail(e)
extract_mail(f)
find_power <- function(x)
{
y=1
while (y <= x) {
y=y*2
}
return(y)
}
find_power(1)
find_power <- function(x)
{
y=1
while (y <= x) {
y=y*2
}
return(y)
}
find_power(0)
find_power <- function(x)
{
y=1
while (y <= x) {
y=y*2
}
return(y)
}
find_power(1)
find_power <- function(x)
{
y=1
while (y <= x) {
y=y*2
}
return(y)
}
find_power(2)
find_power <- function(x)
{
y=1
while (y <= x) {
y=y*2
}
return(y)
}
find_power(2)
x=c(1,3,5,7,9,11,13)
powers_df<-function(x)
{
powers=data.frame(x=x,xsq=x^2,xsqrt=x^1/2)
return(powers)
}
#your code here
powers_df(x)
require("stringr")
name_in="Sheets, Dave"
reorder_name<-function(last_first){
#split the string
my_splits = str_split_fixed(last_first,", ",2)
#reverse the string
my_splits = rev(my_splits)
#concatenate with a space
first_last = str_c(my_splits, collapse = " ")
return(first_last)
}
reorder_name(name_in)
reorder_name("Hancock, William")
